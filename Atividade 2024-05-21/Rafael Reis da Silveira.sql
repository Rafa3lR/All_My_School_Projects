CREATE DATABASE RAFAEL_REIS;
USE RAFAEL_REIS;

-- CRIANDO TABELA DE CLIENTES
CREATE TABLE CLIENTES
(
	ID_CLIENTE INT AUTO_INCREMENT,
    NOME_CLIENTE VARCHAR(50),
    SOBRENOME_CLIENTE VARCHAR(50),
    EMAIL_CLIENTE VARCHAR(100),
    SEXO VARCHAR(1),
    PRIMARY KEY(ID_CLIENTE)
);

-- POPULANDO TABELA DE CLIENTES
INSERT INTO CLIENTES (NOME_CLIENTE, SOBRENOME_CLIENTE, EMAIL_CLIENTE, SEXO) VALUES ('Rafael', 'Gomes', 'rafael.gomes@email.com', 'M');
INSERT INTO CLIENTES (NOME_CLIENTE, SOBRENOME_CLIENTE, EMAIL_CLIENTE, SEXO) VALUES ('Camila', 'Silva', 'camila.silva@email.com', 'F');
INSERT INTO CLIENTES (NOME_CLIENTE, SOBRENOME_CLIENTE, EMAIL_CLIENTE, SEXO) VALUES ('Isabela', 'Teixeira', 'isabela.teixeira@email.com', 'F');
INSERT INTO CLIENTES (NOME_CLIENTE, SOBRENOME_CLIENTE, EMAIL_CLIENTE, SEXO) VALUES ('Eduardo', 'Almeida', 'eduardo.almeida@email.com', 'M');
INSERT INTO CLIENTES (NOME_CLIENTE, SOBRENOME_CLIENTE, EMAIL_CLIENTE, SEXO) VALUES ('Eduardo', 'Teixeira', 'eduardo.teixeira@email.com', 'M');
   
   
-- QUESTAO 1
DELIMITER //
CREATE PROCEDURE MOSTRAR_TODOS_CLIENTES()
BEGIN	
	SELECT * FROM CLIENTES;
END//
DELIMITER ;

CALL MOSTRAR_TODOS_CLIENTES;


-- QUESTAO 2
DELIMITER //
CREATE PROCEDURE MOSTRAR_ALGUNS_CLIENTES(IN QUANT INT)
BEGIN	
	SELECT * FROM CLIENTES
    LIMIT QUANT;
END//
DELIMITER ;

CALL MOSTRAR_ALGUNS_CLIENTES(5);


-- QUESTAO 3
DELIMITER //
CREATE PROCEDURE MOSTRAR_QUANT_POR_SEXO(IN SEXO VARCHAR(1), OUT QUANT INT)
BEGIN
	SELECT COUNT(*) INTO QUANT FROM CLIENTES 
    WHERE CLIENTES.SEXO = SEXO;
END //
DELIMITER ;

CALL MOSTRAR_QUANT_POR_SEXO("F", @QUANT);

SELECT @QUANT AS "QUANTIDADE";


-- QUESTAO 4
ALTER TABLE CLIENTES ADD IDADE INT;
UPDATE CLIENTES SET IDADE = FLOOR(RAND() * (80 - 18 + 1)) + 18
LIMIT 200;

DELIMITER //
CREATE PROCEDURE RETORNA_MEDIA_DE_IDADE(OUT MEDIA INT)
BEGIN
	SELECT AVG(IDADE) INTO MEDIA FROM CLIENTES;
END //
DELIMITER ;

CALL RETORNA_MEDIA_DE_IDADE(@MEDIA);

SELECT @MEDIA AS "IDADE MEDIA";


-- QUESTAO 5
DELIMITER //
CREATE PROCEDURE RETORNA_NOME_COMPLETO(IN ID INT, OUT NOMECOMPLETO VARCHAR(100))
BEGIN
	SELECT CONCAT(NOME_CLIENTE, " ", SOBRENOME_CLIENTE) INTO NOMECOMPLETO FROM CLIENTES
    WHERE CLIENTES.ID_CLIENTE = ID;
END //
DELIMITER ;

CALL RETORNA_NOME_COMPLETO(25, @NOMECOMPLETO);

SELECT @NOMECOMPLETO;


-- QUESTAO 6
DELIMITER //
CREATE PROCEDURE RETORNA_VALOR_COM_TAXA(INOUT VALOR DECIMAL(10,2), IN TAXA INT)
BEGIN
	SET VALOR = VALOR * (TAXA / 100 + 1);
END //
DELIMITER ;

SET @VALOR = 1000.00;
CALL RETORNA_VALOR_COM_TAXA(@VALOR, 25);

SELECT @VALOR;


-- QUESTAO 7
ALTER TABLE CLIENTES ADD SALARIO DECIMAL(10,2);
UPDATE CLIENTES SET SALARIO = FLOOR(RAND() * 100001) 
LIMIT 200;

DELIMITER //
CREATE PROCEDURE ATUALIZAR_SALARIO(IN ID INT, INOUT TAXA INT)
BEGIN 
	UPDATE CLIENTES 
    SET SALARIO = SALARIO * (TAXA / 100 + 1)
    WHERE CLIENTES.ID_CLIENTE = ID;
    
    SELECT SALARIO INTO TAXA FROM CLIENTES
    WHERE CLIENTES.ID_CLIENTE = ID;
END //
DELIMITER ;

SET @TAXA = 25;
CALL ATUALIZAR_SALARIO(5, @TAXA);

SELECT @TAXA AS "SALARIO ATUALIZADO";


-- QUESTAO 8
CREATE TABLE PRODUTOS 
(
	ID_PRODUTOS INT AUTO_INCREMENT,
    NOME_PRODUTOS VARCHAR(100),
    PRECO_PRODUTOS DECIMAL(10,2),
    PRIMARY KEY(ID_PRODUTOS)
);

INSERT INTO PRODUTOS (NOME_PRODUTOS, PRECO_PRODUTOS) VALUES ('Livros - História', 1938.09);
INSERT INTO PRODUTOS (NOME_PRODUTOS, PRECO_PRODUTOS) VALUES ('Ferramentas - Chave de fenda', 2229.23);
INSERT INTO PRODUTOS (NOME_PRODUTOS, PRECO_PRODUTOS) VALUES ('Ferramentas - Serra', 1835.93);
INSERT INTO PRODUTOS (NOME_PRODUTOS, PRECO_PRODUTOS) VALUES ('Eletrônicos - Smartphone', 416.69);
INSERT INTO PRODUTOS (NOME_PRODUTOS, PRECO_PRODUTOS) VALUES ('Livros - História', 3816.91);
INSERT INTO PRODUTOS (NOME_PRODUTOS, PRECO_PRODUTOS) VALUES ('Ferramentas - Chave de fenda', 4732.38);

DELIMITER //
CREATE PROCEDURE ATUALIZAR_PRECO_PRODUTO(IN ID INT, IN NOVO_PRECO DECIMAL(10,2), OUT PRECO_ANTIGO DECIMAL(10,2))
BEGIN 
	SELECT PRODUTOS.PRECO_PRODUTOS INTO PRECO_ANTIGO FROM PRODUTOS 
    WHERE PRODUTOS.ID_PRODUTOS = ID;
	UPDATE PRODUTOS
    SET PRODUTOS.PRECO_PRODUTOS = NOVO_PRECO
    WHERE PRODUTOS.ID_PRODUTOS = ID;
END //
DELIMITER ;

CALL ATUALIZAR_PRECO_PRODUTO(4, 1500.00, @PRECO_ANTIGO);

SELECT @PRECO_ANTIGO AS "PRECO ANTIGO";

SELECT * FROM PRODUTOS WHERE PRODUTOS.ID_PRODUTOS = 100;


-- QUESTAO 9
ALTER TABLE CLIENTES ADD SALDO DECIMAL(10,2);
UPDATE CLIENTES SET SALDO = FLOOR(RAND() * 100001)
LIMIT 200;

DELIMITER //
CREATE PROCEDURE BUSCAR_INFORMACOES_CLIENTE(IN ID INT, OUT NOME VARCHAR(100), OUT SALDO DECIMAL(10,2))
BEGIN
	SELECT CONCAT(CLIENTES.NOME_CLIENTE, " ", CLIENTES.SOBRENOME_CLIENTE), CLIENTES.SALDO INTO NOME, SALDO FROM CLIENTES
    WHERE CLIENTES.ID_CLIENTE = ID;
END //
DELIMITER ;

CALL BUSCAR_INFORMACOES_CLIENTE(4, @NOME, @SALDO);

SELECT @NOME AS "NOME CLIENTE", @SALDO AS "SALDO CLIENTE";


-- QUESTAO 10
CREATE TABLE VENDAS
(
	ID_VENDAS INT AUTO_INCREMENT,
    ID_CLIENTE INT,
    ID_PRODUTOS INT,
    PRIMARY KEY(ID_VENDAS),
    CONSTRAINT FK_VENDAS_CLIENTES FOREIGN KEY(ID_CLIENTE) REFERENCES CLIENTES(ID_CLIENTE),
    CONSTRAINT FK_VENDAS_PRODUTOS FOREIGN KEY(ID_PRODUTOS) REFERENCES PRODUTOS(ID_PRODUTOS)
);


INSERT INTO VENDAS (ID_CLIENTE, ID_PRODUTOS) VALUES (5, 1);
INSERT INTO VENDAS (ID_CLIENTE, ID_PRODUTOS) VALUES (4, 2);
INSERT INTO VENDAS (ID_CLIENTE, ID_PRODUTOS) VALUES (3, 3);
INSERT INTO VENDAS (ID_CLIENTE, ID_PRODUTOS) VALUES (2, 4);
INSERT INTO VENDAS (ID_CLIENTE, ID_PRODUTOS) VALUES (1, 5);
INSERT INTO VENDAS (ID_CLIENTE, ID_PRODUTOS) VALUES (5, 1);
INSERT INTO VENDAS (ID_CLIENTE, ID_PRODUTOS) VALUES (4, 2);

DELIMITER //
CREATE PROCEDURE CALCULAR_TOTAL_VENDAS_CLIENTE(IN ID INT, OUT TOTAL_VENDAS INT)
BEGIN
	SELECT COUNT(*) INTO TOTAL_VENDAS FROM VENDAS
    WHERE VENDAS.ID_CLIENTE = ID;
END //
DELIMITER ;

CALL CALCULAR_TOTAL_VENDAS_CLIENTE(2, @TOTAL_VENDAS);

SELECT @TOTAL_VENDAS;


